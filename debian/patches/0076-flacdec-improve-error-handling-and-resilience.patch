From 4b2e010fe8890b33f4cebde3824436cca93129d5 Mon Sep 17 00:00:00 2001
From: Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>
Date: Fri, 16 Mar 2012 18:23:29 +0100
Subject: [PATCH] flacdec: improve error handling and resilience

... by noting that one occurred in the first place, and then appropriately
ignoring some transient ones.
---
 ext/flac/gstflacdec.c |   37 +++++++++++++++++++++++++++++++++++--
 ext/flac/gstflacdec.h |    2 ++
 2 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/ext/flac/gstflacdec.c b/ext/flac/gstflacdec.c
index 5132dcf..351d02a 100644
--- a/ext/flac/gstflacdec.c
+++ b/ext/flac/gstflacdec.c
@@ -533,6 +533,26 @@ gst_flac_dec_scan_for_last_block (GstFlacDec * flacdec, gint64 * samples)
   }
 }
 
+static gboolean
+gst_flac_dec_handle_decoder_error (GstFlacDec * dec, gboolean msg)
+{
+  gboolean ret;
+
+  dec->error_count++;
+  if (dec->error_count > 10) {
+    if (msg)
+      GST_ELEMENT_ERROR (dec, STREAM, DECODE, (NULL), (NULL));
+    dec->last_flow = GST_FLOW_ERROR;
+    ret = TRUE;
+  } else {
+    GST_DEBUG_OBJECT (dec, "ignoring error for now at count %d",
+        dec->error_count);
+    ret = FALSE;
+  }
+
+  return ret;
+}
+
 static void
 gst_flac_extract_picture_buffer (GstFlacDec * dec,
     const FLAC__StreamMetadata * metadata)
@@ -663,8 +683,8 @@ gst_flac_dec_error_cb (const FLAC__StreamDecoder * d,
       break;
   }
 
-  GST_ELEMENT_ERROR (dec, STREAM, DECODE, (NULL), ("%s (%d)", error, status));
-  dec->last_flow = GST_FLOW_ERROR;
+  if (gst_flac_dec_handle_decoder_error (dec, FALSE))
+    GST_ELEMENT_ERROR (dec, STREAM, DECODE, (NULL), ("%s (%d)", error, status));
 }
 
 static FLAC__StreamDecoderSeekStatus
@@ -1017,6 +1037,9 @@ gst_flac_dec_write (GstFlacDec * flacdec, const FLAC__Frame * frame,
     g_assert_not_reached ();
   }
 
+  if (flacdec->error_count)
+    flacdec->error_count--;
+
   if (!flacdec->seeking) {
     GST_DEBUG_OBJECT (flacdec, "pushing %d samples at offset %" G_GINT64_FORMAT
         " (%" GST_TIME_FORMAT " + %" GST_TIME_FORMAT ")",
@@ -1455,6 +1478,15 @@ gst_flac_dec_chain (GstPad * pad, GstBuffer * buf)
     if (!FLAC__stream_decoder_process_single (dec->decoder)) {
       GST_DEBUG_OBJECT (dec, "process_single failed");
     }
+
+    if (FLAC__stream_decoder_get_state (dec->decoder) ==
+        FLAC__STREAM_DECODER_ABORTED) {
+      GST_WARNING_OBJECT (dec, "Read callback caused internal abort");
+      /* allow recovery */
+      gst_adapter_clear (dec->adapter);
+      FLAC__stream_decoder_flush (dec->decoder);
+      gst_flac_dec_handle_decoder_error (dec, TRUE);
+    }
   } else {
     GST_DEBUG_OBJECT (dec, "don't have all headers yet");
   }
@@ -2092,6 +2124,7 @@ gst_flac_dec_change_state (GstElement * element, GstStateChange transition)
       flacdec->width = 0;
       flacdec->sample_rate = 0;
       gst_segment_init (&flacdec->segment, GST_FORMAT_DEFAULT);
+      flacdec->error_count = 0;
       break;
     default:
       break;
diff --git a/ext/flac/gstflacdec.h b/ext/flac/gstflacdec.h
index aa56b4b..abc5b26 100644
--- a/ext/flac/gstflacdec.h
+++ b/ext/flac/gstflacdec.h
@@ -86,6 +86,8 @@ struct _GstFlacDec {
   guint16        max_blocksize;
 
   gint64         cur_granulepos; /* only used in framed mode (flac-in-ogg) */
+
+  gint           error_count;
 };
 
 struct _GstFlacDecClass {
